name: Build and Publish Electron App

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install Dependencies
        run: |
          npm install

      - name: Build Electron App
        run: |
          npm run dist
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            dist/RudysCutterChallenge.exe
            dist/RudysCutterChallenge.exe.blockmap
            dist/latest.yml

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install build tools
        run: |
          brew install libtool automake autoconf cmake pkg-config

      - name: Install python3 and distutils
        run: |
          brew install python@3.9
          python3 -m venv venv
          source venv/bin/activate
          python3 -m pip install --upgrade pip setuptools

      - name: Install dependencies
        run: |
          source venv/bin/activate
          npm install --legacy-peer-deps --build-from-source

      - name: Build macOS installer
        run: |
          source venv/bin/activate
          npm run dist -- --mac
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: dist/*.dmg

  release:
    runs-on: windows-latest
    needs: [build-windows, build-macos]
    if: success()

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Publish Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm install
          npx electron-builder --publish always
