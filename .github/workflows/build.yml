name: Build and Publish Electron App

on:
  push:
    tags:
      - 'v*'

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Extract Tag
        id: extract_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Update package.json version
        run: |
          npm version ${TAG} --no-git-tag-version

      - name: Update HTML file version
        run: |
          sed -i "s/<p>Version: v[0-9]\+\.[0-9]\+\.[0-9]\+<\/p>/<p>Version: ${TAG}<\/p>/g" public/admin.html

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json public/admin.html
          git commit -m "Update version to ${TAG}"
          git push origin HEAD:main

      - name: Upload updated code
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: .

  build-windows:
    runs-on: windows-latest
    needs: update-version

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install Dependencies
        run: |
          npm install

      - name: Build Electron App
        run: |
          npm run dist
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-windows
          path: |
            dist/RudysCutterChallenge.exe
            dist/RudysCutterChallenge.exe.blockmap
            dist/latest.yml

  build-macos:
    runs-on: macos-latest
    needs: update-version

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install build tools
        run: |
          brew install libtool automake autoconf cmake pkg-config

      - name: Install python3 and distutils
        run: |
          brew install python@3.9
          python3 -m venv venv
          source venv/bin/activate
          python3 -m pip install --upgrade pip setuptools

      - name: Install dependencies
        run: |
          source venv/bin/activate
          npm install --legacy-peer-deps --build-from-source

      - name: Build macOS installer
        run: |
          source venv/bin/activate
          npm run dist -- --mac pkg --x64 --arm64
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-macos
          path: dist/RudysCutterChallenge.pkg

  release:
    runs-on: windows-latest
    needs: [build-windows, build-macos]
    if: success()

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-windows
          path: dist

      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-macos
          path: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/RudysCutterChallenge.exe
          asset_name: RudysCutterChallenge.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/RudysCutterChallenge.pkg
          asset_name: RudysCutterChallenge.pkg
          asset_content_type: application/octet-stream

      - name: Upload Latest YML to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/latest.yml
          asset_name: latest.yml
          asset_content_type: application/octet-stream
